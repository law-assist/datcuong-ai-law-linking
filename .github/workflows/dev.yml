name: Law assist AI law linking development CI

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
  workflow_dispatch:

jobs:

  dev-container-build-push:
    runs-on: [self-hosted, deployment]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Copy models to runner
      run: |
        cp /home/la-2025/models/Classification_model/model.safetensors models/Classification_model/
        cp /home/la-2025/models/ner_model/model.safetensors models/ner_model/
        mkdir models/STS_model
        mkdir models/STS_model_V2
        cp /home/la-2025/models/STS_model/bert-sts-similarity.pt models/STS_model/
        cp /home/la-2025/models/STS_model_V2/bert-sts-V2.pt models/STS_model_V2/

    - name: Check models in runner source code
      run: |
        ls models -a -R

    - name: Login Docker Hub
      uses: docker/login-action@v3.4.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Check Docker buildkit config
      run: "cat /home/la-2025/.config/buildkit/buildkitd.toml"

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v3.10.0
      id: buildx
      with:
        driver-opts: |
          network=host
        buildkitd-config: /home/la-2025/.config/buildkit/buildkitd.toml
        buildkitd-flags: "--allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host --debug"

    - name: Setup Node for devcontainers cli
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Verify node and skopeo setup
      run: |
        node -v
        skopeo -v

    - name: Pre-build and push Dev container images
      uses: devcontainers/ci@v0.3.1900000328
      id: dev_container_prebuild
      with:
        imageName: ${{ secrets.DOCKER_USERNAME }}/ai-law-linking
        imageTag: dev-latest
        cacheFrom: ${{ secrets.DOCKER_USERNAME }}/ai-law-linking
        env: |
          DATABASE_URI=${{ vars.DATABASE_URI }}
        push: always
        runCmd: nvidia-smi

    - name: Verify CI/CD pipeline
      run: echo "${{ steps.dev_container_prebuild.outputs.runCmdOutput }}"